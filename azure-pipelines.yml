# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker



resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'fd74d069-3187-4d35-a0b9-374378e4750c'
  imageRepository: 'idejondockercalibreweb'
  containerRegistry: 'jonideacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push to $(containerRegistry)
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: PowerShell@2
      displayName: 'Get-ChildItem PowerShell'
      inputs:
        targetType: 'inline'
        script: 'Get-ChildItem -Path $(System.DefaultWorkingDirectory) -Recurse -Force'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          'latest'
    - task: PowerShell@2
      displayName: 'Get-ChildItem PowerShell'
      inputs:
        targetType: 'inline'
        script: 'Get-ChildItem -Path $(System.DefaultWorkingDirectory) -Recurse -Force'
    - task: CopyFiles@2
      displayName: 'Copy Files to $(Build.ArtifactStagingDirectory)'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/terraform'
        Contents: '**/**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'terraform'
        publishLocation: 'Container'